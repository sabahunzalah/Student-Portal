{"ast":null,"code":"var _jsxFileName = \"D:\\\\final\\\\Student-Portal\\\\Admission_portal\\\\src\\\\examples\\\\Cards\\\\ProjectCards\\\\DefaultProjectCard\\\\index.js\";\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\n\n// react-router-dom components\nimport { Link } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\";\nimport MDAvatar from \"components/MDAvatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DefaultProjectCard({\n  image,\n  label,\n  title,\n  description,\n  action,\n  authors\n}) {\n  const renderAuthors = authors.map(({\n    image: media,\n    name\n  }) => /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: name,\n    placement: \"bottom\",\n    children: /*#__PURE__*/_jsxDEV(MDAvatar, {\n      src: media,\n      alt: name,\n      size: \"xs\",\n      sx: ({\n        borders: {\n          borderWidth\n        },\n        palette: {\n          white\n        }\n      }) => ({\n        border: `${borderWidth[2]} solid ${white.main}`,\n        cursor: \"pointer\",\n        position: \"relative\",\n        ml: -1.25,\n        \"&:hover, &:focus\": {\n          zIndex: \"10\"\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: \"transparent\",\n      boxShadow: \"none\",\n      overflow: \"visible\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n// Setting default values for the props of DefaultProjectCard\n_c = DefaultProjectCard;\nDefaultProjectCard.defaultProps = {\n  authors: []\n};\n\n// Typechecking props for the DefaultProjectCard\nDefaultProjectCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  action: PropTypes.shape({\n    type: PropTypes.oneOf([\"external\", \"internal\"]),\n    route: PropTypes.string.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\", \"white\"]).isRequired,\n    label: PropTypes.string.isRequired\n  }).isRequired,\n  authors: PropTypes.arrayOf(PropTypes.object)\n};\nexport default DefaultProjectCard;\nvar _c;\n$RefreshReg$(_c, \"DefaultProjectCard\");","map":{"version":3,"names":["Link","PropTypes","Card","CardMedia","Tooltip","MDBox","MDTypography","MDButton","MDAvatar","jsxDEV","_jsxDEV","DefaultProjectCard","image","label","title","description","action","authors","renderAuthors","map","media","name","placement","children","src","alt","size","sx","borders","borderWidth","palette","white","border","main","cursor","position","ml","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","backgroundColor","boxShadow","overflow","_c","defaultProps","propTypes","string","isRequired","shape","type","oneOf","route","color","arrayOf","object","$RefreshReg$"],"sources":["D:/final/Student-Portal/Admission_portal/src/examples/Cards/ProjectCards/DefaultProjectCard/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// react-router-dom components\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// prop-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDButton from \"components/MDButton\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\n\r\nfunction DefaultProjectCard({ image, label, title, description, action, authors }) {\r\n  const renderAuthors = authors.map(({ image: media, name }) => (\r\n    <Tooltip key={name} title={name} placement=\"bottom\">\r\n      <MDAvatar\r\n        src={media}\r\n        alt={name}\r\n        size=\"xs\"\r\n        sx={({ borders: { borderWidth }, palette: { white } }) => ({\r\n          border: `${borderWidth[2]} solid ${white.main}`,\r\n          cursor: \"pointer\",\r\n          position: \"relative\",\r\n          ml: -1.25,\r\n\r\n          \"&:hover, &:focus\": {\r\n            zIndex: \"10\",\r\n          },\r\n        })}\r\n      />\r\n    </Tooltip>\r\n  ));\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: \"transparent\",\r\n        boxShadow: \"none\",\r\n        overflow: \"visible\",\r\n      }}\r\n    >\r\n      {/* <MDBox position=\"relative\" width=\"100.25%\" shadow=\"xl\" borderRadius=\"xl\">\r\n        <CardMedia\r\n          src={image}\r\n          component=\"img\"\r\n          title={title}\r\n          sx={{\r\n            maxWidth: \"100%\",\r\n            margin: 0,\r\n            boxShadow: ({ boxShadows: { md } }) => md,\r\n            objectFit: \"cover\",\r\n            objectPosition: \"center\",\r\n          }}\r\n        />\r\n      </MDBox>\r\n      <MDBox mt={1} mx={0.5}>\r\n        <MDTypography variant=\"button\" fontWeight=\"regular\" color=\"text\" textTransform=\"capitalize\">\r\n          {label}\r\n        </MDTypography>\r\n        <MDBox mb={1}>\r\n          {action.type === \"internal\" ? (\r\n            <MDTypography\r\n              component={Link}\r\n              to={action.route}\r\n              variant=\"h5\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {title}\r\n            </MDTypography>\r\n          ) : (\r\n            <MDTypography\r\n              component=\"a\"\r\n              href={action.route}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              variant=\"h5\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {title}\r\n            </MDTypography>\r\n          )}\r\n        </MDBox>\r\n        <MDBox mb={3} lineHeight={0}>\r\n          <MDTypography variant=\"button\" fontWeight=\"light\" color=\"text\">\r\n            {description}\r\n          </MDTypography>\r\n        </MDBox>\r\n        <MDBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {action.type === \"internal\" ? (\r\n            <MDButton\r\n              component={Link}\r\n              to={action.route}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              color={action.color}\r\n            >\r\n              {action.label}\r\n            </MDButton>\r\n          ) : (\r\n            <MDButton\r\n              component=\"a\"\r\n              href={action.route}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              color={action.color}\r\n            >\r\n              {action.label}\r\n            </MDButton>\r\n          )}\r\n          <MDBox display=\"flex\">{renderAuthors}</MDBox>\r\n        </MDBox>\r\n      </MDBox> */}\r\n    </Card>\r\n  );\r\n}\r\n\r\n// Setting default values for the props of DefaultProjectCard\r\nDefaultProjectCard.defaultProps = {\r\n  authors: [],\r\n};\r\n\r\n// Typechecking props for the DefaultProjectCard\r\nDefaultProjectCard.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  action: PropTypes.shape({\r\n    type: PropTypes.oneOf([\"external\", \"internal\"]),\r\n    route: PropTypes.string.isRequired,\r\n    color: PropTypes.oneOf([\r\n      \"primary\",\r\n      \"secondary\",\r\n      \"info\",\r\n      \"success\",\r\n      \"warning\",\r\n      \"error\",\r\n      \"light\",\r\n      \"dark\",\r\n      \"white\",\r\n    ]).isRequired,\r\n    label: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  authors: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default DefaultProjectCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}